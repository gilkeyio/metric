def copyslice(src list of integer, start integer, end integer) returns list of integer
    let length integer = end - start
    let out list of integer = repeat(0, length)
    let i integer = 0
    while i < length
        set out[i] = src[start + i]
        set i = i + 1
    return out

def concat(a list of integer, b list of integer) returns list of integer
    let total integer = len(a) + len(b)
    let out list of integer = repeat(0, total)
    let i integer = 0
    let j integer = 0
    while i < len(a)
        set out[i] = a[i]
        set i = i + 1
    set j = 0
    while j < len(b)
        set out[len(a) + j] = b[j]
        set j = j + 1
    return out

def trim(arr list of integer, size integer) returns list of integer
    return copyslice(arr, 0, size)

def quicksort(arr list of integer) returns list of integer
    if len(arr) â‰¤ 1
        return arr
    let pivot integer = arr[0]
    let n integer = len(arr)
    let less list of integer = repeat(0, n)
    let greater list of integer = repeat(0, n)
    let lcount integer = 0
    let gcount integer = 0
    let i integer = 1
    while i < n
        if arr[i] < pivot
            set less[lcount] = arr[i]
            set lcount = lcount + 1
        if arr[i] â‰¥ pivot
            set greater[gcount] = arr[i]
            set gcount = gcount + 1
        set i = i + 1
    let trimmedless list of integer = trim(less, lcount)
    let trimmedgreater list of integer = trim(greater, gcount)
    let sortedless list of integer = quicksort(trimmedless)
    let sortedgreater list of integer = quicksort(trimmedgreater)
    let pivotlist list of integer = repeat(pivot, 1)
    let temp list of integer = concat(sortedless, pivotlist)
    let result list of integer = concat(temp, sortedgreater)
    return result

let numbers list of integer = [487, 392, 618, 923, 671, 234, 789, 512, 365, 198, 741, 456, 829, 673, 217, 584, 936, 128, 472, 695, 318, 753, 441, 867, 209, 596, 374, 812, 459, 623, 187, 748, 935, 361, 526, 694, 278, 513, 847, 692, 435, 169, 756, 921, 384, 617, 243, 785, 458, 632, 897, 174, 529, 763, 416, 658, 291, 537, 824, 479, 635, 182, 746, 913, 367, 594, 228, 751, 486, 639, 195, 768, 542, 817, 463, 629, 396, 754, 218, 563, 849, 472, 628, 391, 745, 517, 862, 439, 673, 286, 594, 738, 451, 826, 369, 617, 254, 789, 425, 638, 894, 635, 347, 961, 706, 280, 578, 409, 715, 204, 357, 814, 464, 603, 129, 785, 947, 381, 526, 634, 243, 891, 176, 541, 723, 806, 473, 925, 349, 691, 225, 502, 812, 639, 485, 271, 973, 682, 398, 586, 329, 745, 419, 667, 207, 582, 913, 394, 274, 821, 548, 729, 356, 803, 613, 451, 693, 347, 853, 190, 716, 498, 652, 274, 637, 839, 417, 781, 246, 905, 384, 602, 483, 751, 417, 698, 382, 547, 629, 724, 384, 190, 613, 854, 216, 708, 485, 960, 294, 719, 337, 865, 486, 750, 321, 541, 856, 410, 705, 309, 687, 948, 519, 612, 384, 278, 819, 653, 243, 578, 406, 931, 294, 849, 216, 730, 517, 647, 319, 729, 192, 634, 701, 879, 593, 407, 648, 210, 781, 593, 174, 986, 426, 309, 805, 273, 398, 612, 893, 387, 491, 684, 521, 760, 318, 904, 259, 649, 471, 701, 396, 542, 729, 618, 805, 294, 367, 741, 563, 216, 637, 498, 387, 894, 347, 802, 194, 653, 489, 607, 204, 986, 365, 740, 294, 763, 438, 615, 904, 263, 584, 297, 643, 874, 283, 629, 590, 719, 286, 973, 397, 648, 321, 768, 408, 658, 275, 831, 541, 687, 324, 950, 387, 709, 617, 498, 732, 895, 364, 481, 682, 210, 538, 741, 315, 986, 234, 579, 695, 319, 867, 258, 741, 631, 427, 758, 389, 609, 253, 826, 342, 915, 406, 837, 192, 684, 508, 793, 428, 961, 394, 753, 294, 804, 214, 640, 713, 503, 846, 294, 689, 231, 754, 598, 413, 965, 304, 572, 487, 693, 248, 827, 415, 951, 327, 702, 184, 689, 537, 324, 810, 649, 368, 927, 492, 702, 384, 615, 251, 890, 315, 738, 498, 617, 286, 957, 372, 614, 253, 803, 590, 194, 706, 301, 567, 728, 184, 945, 327, 758, 413, 896, 235, 754, 395, 671, 819, 420, 985, 314, 746, 263, 851, 490, 709, 231, 740, 615, 348, 964, 207, 785, 306, 840, 254, 671, 902, 347, 528, 695, 389, 870, 219, 693, 468, 657, 208, 931, 382, 714, 281, 519, 654, 370, 972, 236, 685, 508, 729, 314, 841, 203, 769, 543, 601, 826, 294, 794, 236, 705, 384, 567, 298, 671, 421, 943, 397, 621, 195, 740, 582, 392, 874, 346, 695, 238, 945, 423, 690, 314, 879, 537, 480, 735, 319, 781, 602, 384, 829, 294, 613, 183, 735, 460, 589, 820, 251, 687, 378, 962, 284, 694, 518, 649, 324, 831, 298, 715, 604, 429, 753, 314, 893, 258, 785, 419, 638, 907, 248, 537, 620, 831, 294, 940, 387, 763, 258, 642, 384, 781, 503, 872, 265, 601, 478, 846, 394, 602, 213, 758, 329, 501, 670, 218, 875, 326, 730, 294, 689, 582, 402, 937, 314, 805, 294, 743, 571, 682, 408, 965, 429, 768, 210, 538, 617, 394, 852, 183, 740, 492, 681, 398, 593, 735, 248, 847, 362, 910, 384, 627, 529, 891, 473, 540, 296, 708, 304, 946, 213, 794, 628, 305, 827, 491, 684, 213, 758, 620, 492, 937, 289, 649, 507, 731, 184, 685, 490, 617, 392, 831, 274, 746, 384, 620, 495, 879, 204, 789, 573, 618, 830, 413, 758, 231, 968, 379, 582, 190, 715, 439, 581, 920, 318, 695, 487, 648, 213, 851, 481, 762, 238, 640, 274, 951, 329, 740, 208, 690, 486, 731, 942, 273, 508, 729, 384, 690, 526, 371, 968, 493, 607, 194, 749, 290, 563, 812, 487, 723, 402, 841, 314, 705, 271, 648, 398, 962, 248, 681, 407, 584, 759, 324, 938, 491, 628, 209, 785, 617, 318, 741, 264, 952, 297, 631, 208, 769, 514, 632, 481, 837, 394, 752, 319, 681, 407, 593, 720, 259, 935, 402, 614, 271, 837, 590, 207, 958, 473, 680, 514, 741, 378, 592, 810, 294, 846, 312, 698, 592, 419, 823, 283, 649, 385, 904, 210, 746, 603, 473, 758, 294, 930, 379, 671, 481, 609, 918, 214, 638, 309, 729, 584, 472, 839, 327, 691, 481, 540, 692, 315, 879, 496, 708, 413, 645, 210, 875, 426, 320, 740]
let sorted list of integer = quicksort(numbers)
print sorted